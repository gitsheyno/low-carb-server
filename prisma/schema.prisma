generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  createdAT   DateTime @default(now())
  username    String   @unique
  password    String
  name        String

  proteinGram Float?
  proteinCal  Float?
  fatGram     Float?
  fatCal      Float?
  carbsGram   Float?
  carbsCal    Float?
  calories    Float?
  gender      String
  weight      Float
  height      Float
  age         Int
  activity    String
  goal        String
  bmr         Float?
  tdee        Float?


  UserMeal UserMeal[]
}



model UserMeal {
  id          String   @id @default(uuid())
  createdAT   DateTime @default(now())
  belongsToId String
  belongsTo   User     @relation(fields: [belongsToId], references: [id])
  name        String
  calories    Float
  protein     Float
  carbs       Float
  fat         Float
  image       String

  @@unique([id, belongsToId])
}

// model Macros {
//   id       String   @id @default(uuid())
//   calories Float

//   protein   Macronutrient @relation("Protein", fields: [proteinId], references: [id])
//   proteinId String           @unique

//   fat   Macronutrient @relation("Fat", fields: [fatId], references: [id])
//   fatId String           @unique

//   carbs   Macronutrient @relation("Carbs", fields: [carbsId], references: [id])
//   carbsId String           @unique

//   user   User?
//   userId String? @unique
// }

// model Macronutrient {
//   id       String   @id @default(uuid())
//   grams    Float
//   calories Float

//   proteinOf Macros? @relation("Protein")
//   fatOf     Macros? @relation("Fat")
//   carbsOf   Macros? @relation("Carbs")
// }
